name = 13x13 Morris
description = 13x13 Morris, S(13,9), E(5,5)
# [3] -> experiment4() 
experiment_number = 3
default = true

verbosity = 3

# start neurons
# (13,9) = 116  = (13 - 1) + (9 - 1) * 13
start_neuron = 116   
# (13,6) = 77 = (13 - 1) + (6 - 1) * 13
#start_neuron = 77   
# (9,1) = 8 = (9 - 1) + (1 - 1) * 13
#start_neuron = 8  
# (6,13) = 161 = (6 - 1) + (13 - 1) * 13
#start_neuron = 161  
# (1,8) = 91 = (1 - 1) + (8 - 1) * 13
#start_neuron = 91  


#Assertion failed: synId < (runtimeData[netId].Npre[postNId]), file C:\cockroach-ut3\src\CARLsim6\carlsim\kernel\src\snn_cpu_module.cpp, line 451
#Segment[3] S=(9,1) E=(5,5)  [8]-->[56]
#Excite neuron 8 in group 0 with 30.0 at 1600 ms
#Spike Wave has reached target neuron 56 at 1629
#Path: 8,7,20,6,18,17,29,41,55,56
#E-Prop yields a loss of 206.

# fixed target neuron
# (5,5) = 56  = (5 - 1) + (5 - 1) * 13
target_neuron = 56  

# Morris: walls at N,E,S,W define 20 start points (4 x 5)
start_points = (5,1);(6,1);(7,1);(8,1);(9,1);(13,5);(13,6);(13,7);(13,8);(13,9);(5,13);(6,13);(7,13);(8,13);(9,13);(1,5);(1,6);(1,7);(1,8);(1,9);
#manually sampled for reproduction

# Morris: end point is the hidden platform at a fixed location) 
end_points = (5,5);


# randi(6, 1, 4*8*10)   4 random points at each side for 8 sessions, = 32 trails,  10 simulations  = 320
#selection = 4;2;3;2;3;3;1;4;1;1;3;1;4;1;3;5;2;4;1;1;2;1;5;3;1;3;3;5;3;3;3;3;
selection = 4;2;3;2;3;3;1;4;1;1;3;1;4;1;3;5;2;4;1;1;2;1;5;3;1;3;3;5;3;3;3;3;4;4;1;3;3;2;4;2;2;1;3;2;2;2;1;1;1;4;3;3;2;2;3;3;4;3;2;5;2;5;3;4;5;5;1;5;2;1;2;1;2;3;1;2;1;5;2;4;3;2;2;4;3;4;5;4;2;5;3;3;1;4;2;4;2;4;5;5;2;3;1;4;5;2;4;4;3;3;1;3;1;4;5;3;2;4;1;5;5;4;1;2;4;2;3;5;2;1;1;1;5;2;2;2;5;4;3;4;5;3;5;3;3;3;5;1;1;5;4;3;1;3;4;4;2;3;5;5;4;4;2;3;4;2;2;5;5;3;4;2;5;4;2;4;2;3;2;1;3;2;3;4;4;4;3;1;5;2;4;5;1;1;1;1;1;3;3;2;4;2;4;5;2;2;1;4;1;3;3;1;5;3;3;2;5;4;4;4;3;3;4;2;4;2;1;3;2;4;1;1;5;5;2;5;5;4;4;2;1;4;2;3;2;2;4;4;5;1;1;1;4;2;1;3;4;5;2;3;5;2;1;3;5;3;5;4;2;1;1;5;4;4;2;4;3;5;2;1;3;2;1;4;2;5;5;1;2;3;2;1;1;4;1;2;4;5;5;1;3;4;3;1;3;4;3;3;1;1;4;4;3;3;1;1;5;3;3;2;


# Random trails define by indezs to cartesian product on start_point x end_point
# Hint: Random walk is a path and would applys to explore an open field -> IMEC  
#selection = 9;15;17;4;8;14;16;5;
#32 random points at the wall 
#Crashes at [10]
##selection = 15;11;19;1;6;4;6;12;8;9;14;10;7;13;2;2;2;12;17;10;7;8;18;15;6;18;1;4;8;14;1;7;
# Patched without [10], crashes again at [10] path and eligibility shows a sideward navigation to the right at the beginning
#selection = 15;11;19;1;6;4;6;12;8;9;;10;7;13;2;2;2;12;17;10;7;8;18;15;6;18;1;4;8;14;1;7;
# Patched without [9] , crashses gain at [9]
#selection = 15;11;19;1;6;4;6;12;8;;14;10;7;13;2;2;2;12;17;10;7;8;18;15;6;18;1;4;8;14;1;7;
#just another random try  again at 10
# same problem, interestingly, the path does not start at the beginning, nut 122 instead of 162, 
# which corresponds with the display in Matlab
#[31;1m[ERROR C:\cockroach-ut3\src\CARLsim6\carlsim\kernel\src\snn_cpu_module.cpp:1516] Post-synaptic delay was not sorted correctly pre_id=70, offset=560?[0m
# seems to be a genuid bug 
#selection = 15;11;19;1;6;4;6;12;8;2;12;17;10;7;8;18;15;6;18;1;4;8;14;1;7;9;14;10;7;13;2;
# run till [9] at take a good look at the nw
#selection = 15;11;19;1;6;4;6;12;8;2;

# round robin counter clockwise the wall starting with east bottom
#Crashes at final element
#selection = 9;14;19;4; 
#selection = 8;13;18;3; 
#            7;12;17;2; 
#            6;11;16;1; 
#            5;10;15;0; 
#Crashes at 5th element, the stripped elements before run ok !!!
#selection = 9;14;19;8;13;18;

initial_current = 30
recovery_time_ms = 10
time_grid_ms = 1000
slow_motion = 0.01
fast_forward = 1.0
observation_time_ms = 300
start_time_ms = 100
# time_grid * 32
end_time_ms = -1

# cost matrix
costs = { \\
 {  15,  15,  15,  15,  4,  5,  2,  2,  4,  15,  15,  15,  15  }, \\
 {  15,  15,  2,  5,  5,  5,  4,  3,  2,  3,  5,  15,  15  }, \\
 {  15,  3,  5,  5,  2,  2,  5,  3,  3,  2,  5,  2,  15  }, \\
 {  15,  4,  4,  3,  5,  5,  5,  5,  4,  3,  3,  4,  15  }, \\
 {  4,  5,  4,  5,  1,  2,  4,  2,  4,  4,  2,  2,  4  }, \\
 {  3,  5,  2,  5,  3,  3,  3,  2,  3,  2,  3,  5,  5  }, \\
 {  4,  5,  4,  5,  2,  5,  5,  4,  3,  2,  5,  3,  5  }, \\
 {  5,  3,  3,  3,  3,  3,  5,  3,  2,  4,  3,  3,  5  }, \\
 {  3,  3,  3,  5,  3,  4,  5,  4,  5,  3,  4,  5,  2  }, \\
 {  15,  5,  2,  5,  2,  3,  4,  2,  5,  3,  2,  5,  15  }, \\
 {  15,  2,  2,  2,  4,  2,  2,  2,  4,  2,  5,  2,  15  }, \\
 {  15,  15,  4,  4,  4,  2,  5,  4,  4,  2,  4,  15,  15  }, \\
 {  15,  15,  15,  15,  4,  2,  5,  5,  3,  15,  15,  15,  15  }  \\
}

# FIXME: E-Prop has to take cost discout into account
# discount costs on entering a new place or leaving the old 
discount = 1

